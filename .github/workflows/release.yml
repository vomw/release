name: Release

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    env:
      ARCHIVE_PATH: encrypted-dns_${{ github.ref_name }}_linux-armv7.tar.bz2
    steps:
      - uses: actions/checkout@v4

      - uses: goto-bus-stop/setup-zig@v2

      - uses: hecrj/setup-rust-action@v2
        with:
          rust-version: stable
          targets: armv7-unknown-linux-gnueabihf



      - name: Install cross-compiling tools for ARM
        run: sudo apt-get install -y gcc-arm-linux-gnueabihf

      # - name: Install Rust
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: stable

      - name: Install ARM target for Rust
        run: rustup target add armv7-unknown-linux-gnueabihf


      - name: Check Cargo availability
        run: cargo --version          


      - name: Check Rustup default toolchain
        run: rustup default | grep stable


      - name: Build for ARM
        run: |
          echo 'lto = "fat"' >> Cargo.toml
          env RUSTFLAGS="-C strip=symbols" cargo build --target=armv7-unknown-linux-gnueabihf --release
          mkdir encrypted-dns
          cp target/release/encrypted-dns encrypted-dns/
          cp README.md example-encrypted-dns.toml encrypted-dns/
          tar cjpf ${ARCHIVE_PATH} encrypted-dns


      - uses: actions/upload-artifact@v4
        with:
          name: encrypted-dns_linux-armv7
          path: ${{ env.ARCHIVE_PATH }}


  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    runs-on: ubuntu-20.04




    steps:
      - uses: actions/download-artifact@v4

      - name: Create release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ github.ref_name }}
          draft: true
          prerelease: false
          files: |
            encrypted-dns_linux-armv7/*.tar.bz2

