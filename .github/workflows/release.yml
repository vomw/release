name: Build and Upload 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Cygwin environment
        uses: egor-tensin/setup-cygwin@v4
        with:
          packages: |
            gcc-core, make, git, libssh-devel, libopenssl-devel, libidn-devel, libpcap-devel, libgcrypt-devel, libgpg-error-devel, libmariadbclient-devel, libpq-devel, libsqlite3-devel, dos2unix, libssl-dev, libssh-dev, libidn11-dev, libpcre3-dev, libgtk2.0-dev, libmysqlclient-dev, libpq-dev, libsvn-dev, firebird-dev, libmemcached-dev, libgpg-error-dev, libgcrypt11-dev, libgcrypt20-dev, openssl

      - name: verify pkg
        run: |
          basic() {
              pwd
              cygcheck -c gcc-core make git libssh-devel libopenssl-devel libidn-devel libpcap-devel libgcrypt-devel libgpg-error-devel libmariadb-devel libpq-devel libsqlite3-devel dos2unix
          }
          basic
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'





      - name: dos2unix
        run: |
          basic() {
              pwd
              cd ${GITHUB_WORKSPACE}
              ls -alth
              export CC=gcc
              dos2unix configure
              git config --global --add safe.directory '*'
              git config --global user.name 'vomw'
              git config --global user.email '22770640+vomw@users.noreply.github.com'
              git status
              git remote -v
          }
          basic
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'


      - name: configure
        run: |
          basic() {
              pwd
              cd ${GITHUB_WORKSPACE}
              ls -alth
              export CC=gcc
              ./configure
              git status
          }
          basic
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'




      - name: make
        run: |
          basic() {
              pwd
              cd ${GITHUB_WORKSPACE}
              ls -alth
              export CC=gcc
              make
              git status
          }
          basic
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'



      # - name: Install Chocolatey
      #   run: |
      #     Set-ExecutionPolicy Bypass -Scope Process -Force; `
      #     [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; `
      #     iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

      # - name: Install Cygwin
      #   run: |
      #     choco install cygwin -y --params "/InstallDir:C:\cygwin"
      #     Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
      #     refreshenv

      # - name: Download Cygwin setup-x86_64.exe
      #   run: |
      #     Invoke-WebRequest -Uri https://cygwin.com/setup-x86_64.exe -OutFile C:\cygwin\setup-x86_64.exe

      # - name: Install Required Packages
      #   run: |
      #     C:\cygwin\setup-x86_64.exe -q -P gcc-core,make,git,libssh-devel,libopenssl-devel,libidn-devel,libpcap-devel,libgcrypt-devel,libgpg-error-devel,libmariadbclient-devel,libpq-devel,libsqlite3-devel,dos2unix,libssl-dev,libssh-dev,libidn11-dev,libpcre3-dev,libgtk2.0-dev,libmysqlclient-dev,libpq-dev,libsvn-dev,firebird-dev,libmemcached-dev,libgpg-error-dev,libgcrypt11-dev,libgcrypt20-dev,openssl


      # - name: debug
      #   run: |
      #     C:\cygwin\bin\bash.exe --help
      #     C:\cygwin\bin\bash.exe -lc "find /cygdrive/c/cygwin -name setup-x86_64.exe && find /cygdrive/c/cygwin -name setup-*.exe && find /cygdrive/c/cygwin -name ssl.h "


      # - name: Convert Line Endings
      #   run: |
      #     # pwd
      #     # echo ${GITHUB_WORKSPACE}
      #     # cd ${GITHUB_WORKSPACE}
      #     # pwd
      #     # dir
      #     # C:\cygwin\bin\bash.exe --help
      #     C:\cygwin\bin\bash.exe -lc "cd /cygdrive/d/a/sanctioned/sanctioned && ls -alth && dos2unix configure"

      # - name: Compile THC-Hydra
      #   run: |
      #     # cd ${GITHUB_WORKSPACE} 
      #     # pwd
      #     C:\cygwin\bin\bash.exe -lc "cd /cygdrive/d/a/sanctioned/sanctioned && export CC=gcc && ./configure --debug --disable-xhydra --prefix=$PWD/build && make"






      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: hydra-windows
          path: $GITHUB_WORKSPACE/hydra.exe
